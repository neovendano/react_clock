{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerID","state","currentTime","getCurrentTime","this","window","setInterval","tick","prevProps","name","props","console","debug","undefined","clearInterval","setState","info","className","Date","toUTCString","slice","React","Component","App","hasClock","clockName","nameUpdateInterval","updateClockName","getRandomName","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","value","now","toString","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,YAAaH,EAAMI,kBAJvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,kBAAM,EAAKC,SAAQ,OARzD,gCAWE,SAAmBC,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BJ,EAAUC,KAAxC,eAAmDL,KAAKM,MAAMD,SAdpE,kCAkBE,gBACuBI,IAAjBT,KAAKJ,SACPK,OAAOS,cAAcV,KAAKJ,WApBhC,kBA4BE,WACEI,KAAKW,SAAS,CACZb,YAAaH,EAAMI,mBAGrBQ,QAAQK,KAAKZ,KAAKH,MAAMC,eAjC5B,oBAoCE,WACE,IAAQO,EAASL,KAAKM,MAAdD,KACAP,EAAgBE,KAAKH,MAArBC,YAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCR,IAChC,YACD,sBAAMQ,UAAU,cAAhB,SAA+Bf,UA5CvC,6BAwBE,WACE,OAAO,IAAIgB,MAAOC,cAAcC,OAAO,IAAK,OAzBhD,GAA2BC,IAAMC,WCDpBC,EAAb,4MACEtB,MAAkB,CAChBuB,UAAU,EACVC,UAAW,WAHf,EAMEC,wBANF,IA8BEC,gBAAkB,WAChB,EAAKZ,SAAS,CACZU,UAAWF,EAAIK,mBAhCrB,EAoCEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKhB,SAAS,CAAES,UAAU,KAtC9B,EAyCEQ,gBAAkB,WAChB,EAAKjB,SAAS,CAAES,UAAU,KA1C9B,uDAQE,WACES,SAASC,iBAAiB,cAAe9B,KAAKyB,kBAC9CI,SAASC,iBAAiB,QAAS9B,KAAK4B,iBAExC5B,KAAKsB,mBAAqBrB,OAAOC,YAAYF,KAAKuB,gBAAiB,QAZvE,kCAeE,WACEM,SAASE,oBAAoB,cAAe/B,KAAKyB,kBACjDI,SAASE,oBAAoB,QAAS/B,KAAK4B,sBAEXnB,IAA5BT,KAAKsB,oBACPrB,OAAOS,cAAcV,KAAKsB,sBApBhC,oBA6CE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCb,KAAKH,MAAMuB,UAAY,cAAC,EAAD,CAAOf,KAAML,KAAKH,MAAMwB,kBAjDxD,4BAwBE,WACE,IAAMW,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,OA3BpB,GAAyBf,IAAMC,WCN/BiB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.0c4b5e42.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  currentTime: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  timerID: number | undefined;\n\n  state = {\n    currentTime: Clock.getCurrentTime(),\n  };\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => this.tick(), 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerID !== undefined) {\n      window.clearInterval(this.timerID);\n    }\n  }\n\n  static getCurrentTime(): string {\n    return new Date().toUTCString().slice(-12, -4);\n  }\n\n  tick() {\n    this.setState({\n      currentTime: Clock.getCurrentTime(),\n    });\n    // eslint-disable-next-line no-console\n    console.info(this.state.currentTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{currentTime}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameUpdateInterval: number | undefined;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.nameUpdateInterval = window.setInterval(this.updateClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n\n    if (this.nameUpdateInterval !== undefined) {\n      window.clearInterval(this.nameUpdateInterval);\n    }\n  }\n\n  static getRandomName() {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  }\n\n  updateClockName = () => {\n    this.setState({\n      clockName: App.getRandomName(),\n    });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
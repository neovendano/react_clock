{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerID","state","currentTime","getCurrentTime","this","window","setInterval","tick","undefined","clearInterval","setState","console","info","name","props","className","nextProps","prevState","split","debug","time","Date","toUTCString","slice","React","Component","App","hasClock","clockName","nameUpdateInterval","updateClockName","getRandomName","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","randomNumber","Math","floor","random","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,YAAaH,EAAMI,kBAJvB,uDAuBE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,kBAAM,EAAKC,SAAQ,OAxBzD,kCA2BE,gBACuBC,IAAjBJ,KAAKJ,SACPK,OAAOI,cAAcL,KAAKJ,WA7BhC,kBAqCE,WACEI,KAAKM,SAAS,CACZR,YAAaH,EAAMI,mBAGrBQ,QAAQC,KAAKR,KAAKH,MAAMC,eA1C5B,oBA6CE,WACE,IAAQW,EAAST,KAAKU,MAAdD,KACAX,EAAgBE,KAAKH,MAArBC,YAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAChC,YACD,sBAAME,UAAU,cAAhB,SAA+Bb,UArDvC,uCAOE,SACEc,EACAC,GAEA,OAAID,EAAUH,OAASI,EAAUf,YAAYgB,MAAM,KAAK,IAEtDP,QAAQQ,MAAR,uBAA8BF,EAAUf,YAAYgB,MAAM,KAAK,GAA/D,eAAwEF,EAAUH,OAE3E,CACLO,KAAK,GAAD,OAAKJ,EAAUH,KAAf,YAAuBd,EAAMI,oBAI9B,OApBX,4BAiCE,WACE,OAAO,IAAIkB,MAAOC,cAAcC,OAAO,IAAK,OAlChD,GAA2BC,IAAMC,WCDpBC,EAAb,4MACEzB,MAAkB,CAChB0B,UAAU,EACVC,UAAW,WAHf,EAMEC,wBANF,IA8BEC,gBAAkB,WAChB,EAAKpB,SAAS,CACZkB,UAAWF,EAAIK,mBAhCrB,EAoCEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKxB,SAAS,CAAEiB,UAAU,KAtC9B,EAyCEQ,gBAAkB,WAChB,EAAKzB,SAAS,CAAEiB,UAAU,KA1C9B,uDAQE,WACES,SAASC,iBAAiB,cAAejC,KAAK4B,kBAC9CI,SAASC,iBAAiB,QAASjC,KAAK+B,iBAExC/B,KAAKyB,mBAAqBxB,OAAOC,YAAYF,KAAK0B,gBAAiB,QAZvE,kCAeE,WACEM,SAASE,oBAAoB,cAAelC,KAAK4B,kBACjDI,SAASE,oBAAoB,QAASlC,KAAK+B,sBAEX3B,IAA5BJ,KAAKyB,oBACPxB,OAAOI,cAAcL,KAAKyB,sBApBhC,oBA6CE,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,6CACCX,KAAKH,MAAM0B,UAAY,cAAC,EAAD,CAAOd,KAAMT,KAAKH,MAAM2B,kBAjDxD,4BAwBE,WACE,IAAMW,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAErC,MAAM,SAAN,OAAgBH,OA3BpB,GAAyBf,IAAMC,WCN/BkB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.1cc98386.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  currentTime: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  timerID: number | undefined;\n\n  state = {\n    currentTime: Clock.getCurrentTime(),\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: Props,\n    prevState: State,\n  ) {\n    if (nextProps.name !== prevState.currentTime.split(' ')[0]) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.currentTime.split(' ')[0]} to ${nextProps.name}`);\n\n      return {\n        time: `${nextProps.name} ${Clock.getCurrentTime()}`,\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerID !== undefined) {\n      window.clearInterval(this.timerID);\n    }\n  }\n\n  static getCurrentTime(): string {\n    return new Date().toUTCString().slice(-12, -4);\n  }\n\n  tick() {\n    this.setState({\n      currentTime: Clock.getCurrentTime(),\n    });\n    // eslint-disable-next-line no-console\n    console.info(this.state.currentTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{currentTime}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameUpdateInterval: number | undefined;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.nameUpdateInterval = window.setInterval(this.updateClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n\n    if (this.nameUpdateInterval !== undefined) {\n      window.clearInterval(this.nameUpdateInterval);\n    }\n  }\n\n  static getRandomName() {\n    const randomNumber = Math.floor(Math.random() * 10000);\n\n    return `Clock-${randomNumber}`;\n  }\n\n  updateClockName = () => {\n    this.setState({\n      clockName: App.getRandomName(),\n    });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}